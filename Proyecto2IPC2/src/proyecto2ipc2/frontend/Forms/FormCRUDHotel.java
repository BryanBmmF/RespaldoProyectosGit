/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto2ipc2.frontend.Forms;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import proyecto2ipc2.backend.Hotel.ControladorHoteles;
import proyecto2ipc2.backend.Hotel.Hotel;
import static proyecto2ipc2.database.OperadorEsquema.CAMPOS_OBLIGATORIOS;
import static proyecto2ipc2.database.OperadorEsquema.ERROR_ACTUALIZACION;
import static proyecto2ipc2.database.OperadorEsquema.ERROR_CREACION;
import static proyecto2ipc2.database.OperadorEsquema.ERROR_ELIMINACION;
import static proyecto2ipc2.database.OperadorEsquema.ERROR_RECUP;
import static proyecto2ipc2.database.OperadorEsquema.GUARDAR_DATOS;
import proyecto2ipc2.frontend.JFramePrincipal;

/**
 *
 * @author bryan
 */
public class FormCRUDHotel extends javax.swing.JInternalFrame {
    public static final String RECUPERAR_HOTEL ="Para recuperar los datos de un Hotel\n se debe especificar el mismo";
    public static final String ELIMINAR_HOTEL ="Para Eliminar los datos de un Hotel\n se debe especificar el mismo";
    public static final String ELIMINAR_DATOS_HOTEL ="Esta seguro de Eliminar al Hotel ";
    private ControladorHoteles controladorHotel;
    private Hotel hotel;
    private String hotelTemp;
    private JFramePrincipal ventanaprincipal;
    /**
     * Creates new form FormCRUDHotel
     */
    public FormCRUDHotel(JFramePrincipal ventanaPrincipal) {
        this.hotelTemp=null;
        this.ventanaprincipal=ventanaPrincipal;
        initComponents();
        deshabilitarBotones();
        cargarTablaHoteles();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtHabitaciones = new javax.swing.JTextField();
        btnRegistrar = new javax.swing.JButton();
        btnRecuperar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnGestionarHabitaciones = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtNumeroHotel = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbHoteles = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Gestion de Hoteles");

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Nombre:    *");

        jLabel2.setText("Direccion: *");

        jLabel3.setText("No. Habitaciones:");

        txtHabitaciones.setEditable(false);

        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        btnRecuperar.setText("Recuperar");
        btnRecuperar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecuperarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnGestionarHabitaciones.setBackground(new java.awt.Color(51, 51, 255));
        btnGestionarHabitaciones.setForeground(new java.awt.Color(255, 255, 255));
        btnGestionarHabitaciones.setText("Gestionar Habitaciones");
        btnGestionarHabitaciones.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnGestionarHabitaciones.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGestionarHabitaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGestionarHabitacionesActionPerformed(evt);
            }
        });

        jLabel5.setText("No.Hotel:");

        txtNumeroHotel.setEditable(false);

        jButton1.setText("Limpiar Campos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtNombre)
                        .addGap(19, 19, 19)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtHabitaciones)
                            .addComponent(btnGestionarHabitaciones, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtNumeroHotel, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                                .addGap(478, 478, 478))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnRegistrar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnRecuperar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnActualizar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEliminar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtDireccion)
                                .addGap(316, 316, 316)))
                        .addGap(38, 38, 38)))
                .addGap(12, 12, 12))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHabitaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(btnGestionarHabitaciones)))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtNumeroHotel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegistrar)
                    .addComponent(btnRecuperar)
                    .addComponent(btnActualizar)
                    .addComponent(btnEliminar)
                    .addComponent(jButton1))
                .addContainerGap(7, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setText("Listado de Hoteles (Seleccione uno)");

        tbHoteles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero", "Nombre", "Direccion", "No. Habitaciones"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbHoteles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbHotelesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbHoteles);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        // TODO add your handling code here:
            if (txtNombre.getText().isEmpty()||txtDireccion.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, CAMPOS_OBLIGATORIOS,ERROR_CREACION, JOptionPane.ERROR_MESSAGE);
            } else {
                        int opcion= JOptionPane.showConfirmDialog(this, GUARDAR_DATOS);
                        if (opcion==0) {
                                hotel= new Hotel(txtNombre.getText(), txtDireccion.getText());
                                controladorHotel= new ControladorHoteles(hotel, this);
                                controladorHotel.registrarHotel();
                        }
                        if(opcion==1){
                                limpiarCampos();
                                deshabilitarBotones();
                        }
                }
            
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnRecuperarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecuperarActionPerformed
        // TODO add your handling code here:
            if (txtNombre.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null,RECUPERAR_HOTEL, ERROR_RECUP, JOptionPane.ERROR_MESSAGE);
            } else {    
                        hotel= new Hotel(txtNombre.getText(),"");
                        controladorHotel= new ControladorHoteles(hotel, this);
                        controladorHotel.recuperarHotel();           
                }
    }//GEN-LAST:event_btnRecuperarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
            if (txtNombre.getText().isEmpty()||txtDireccion.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, CAMPOS_OBLIGATORIOS,ERROR_ACTUALIZACION, JOptionPane.ERROR_MESSAGE);
            } else {
                        int opcion= JOptionPane.showConfirmDialog(this, GUARDAR_DATOS);
                        if (opcion==0) {
                                hotel= new Hotel(txtNombre.getText(), txtDireccion.getText());
                                controladorHotel= new ControladorHoteles(hotel, this);
                                controladorHotel.actualizarHotel();
                        }
                        if(opcion==1){
                                limpiarCampos();
                                deshabilitarBotones();
                        }
                }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
            if (txtNombre.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, ELIMINAR_HOTEL, ERROR_ELIMINACION, JOptionPane.ERROR_MESSAGE);
            } else {    
                        int opcion= JOptionPane.showConfirmDialog(this, ELIMINAR_DATOS_HOTEL+hotelTemp+"?");
                        if (opcion==0) {
                                hotel= new Hotel(hotelTemp,"");
                                controladorHotel= new ControladorHoteles(hotel,this);
                                controladorHotel.eliminarHotel();
                        }
                        if(opcion==1){
                                limpiarCampos();
                                deshabilitarBotones();
                        }
                        

                }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void tbHotelesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbHotelesMouseClicked
        // TODO add your handling code here:
            habilitarBotones();
            DefaultTableModel model =(DefaultTableModel)tbHoteles.getModel();
            
            if(tbHoteles.getSelectedRow()!=-1){//si se ha seleccionado algo en la tabla se rellenan los campo
                    txtNumeroHotel.setText(model.getValueAt(tbHoteles.getSelectedRow(), 0).toString());
                    txtNombre.setText(model.getValueAt(tbHoteles.getSelectedRow(), 1).toString());
                    txtDireccion.setText(model.getValueAt(tbHoteles.getSelectedRow(), 2).toString());
                    txtHabitaciones.setText(model.getValueAt(tbHoteles.getSelectedRow(), 3).toString());
                    
                    
                    //almacenamos el usuario temporal seleccionado
                    hotelTemp=model.getValueAt(tbHoteles.getSelectedRow(), 1).toString();
                    
            }
    }//GEN-LAST:event_tbHotelesMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
            limpiarCampos();
            deshabilitarBotones();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnGestionarHabitacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGestionarHabitacionesActionPerformed
        // TODO add your handling code here:
             if (txtNombre.getText().isEmpty() || txtNumeroHotel.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Seleccione primero un Hotel\n en la Tabla de Abajo", ERROR_RECUP, JOptionPane.ERROR_MESSAGE);
            } else {    
                        ventanaprincipal.gestionarHabitaciones(txtNombre.getText());
                }
            
    }//GEN-LAST:event_btnGestionarHabitacionesActionPerformed
    public void cargarTablaHoteles(){
            controladorHotel= new ControladorHoteles();
            List<Hotel> lista= controladorHotel.recuperarHoteles();
            DefaultTableModel model= (DefaultTableModel)this.tbHoteles.getModel();
            for(Hotel hotel: lista){
                    model.addRow(new Object[]{hotel.getId(),hotel.getNombre(),hotel.getDireccion(),
                    controladorHotel.recuperarNumeroHabitaciones(hotel.getId())});
            }                        
    }
    public void agregarHotelEnTabla(Hotel hotel){
            controladorHotel= new ControladorHoteles();
            DefaultTableModel model= (DefaultTableModel)this.tbHoteles.getModel();        
            model.addRow(new Object[]{hotel.getId(),hotel.getNombre(),hotel.getDireccion(),
                    controladorHotel.recuperarNumeroHabitaciones(hotel.getId())});
                              
    }
    public void eliminarHotelEnTabla(){
            DefaultTableModel model=(DefaultTableModel)tbHoteles.getModel();
            model.removeRow(tbHoteles.getSelectedRow());
    }
    public void actualizarHotelEnTabla(){
            DefaultTableModel model=(DefaultTableModel)tbHoteles.getModel();
            //Actualizando Tabla Clientes
            model.setValueAt(txtNumeroHotel.getText(), tbHoteles.getSelectedRow(),0);
            model.setValueAt(txtNombre.getText(), tbHoteles.getSelectedRow(),1);
            model.setValueAt(txtDireccion.getText(), tbHoteles.getSelectedRow(),2);
            model.setValueAt(txtHabitaciones.getText(), tbHoteles.getSelectedRow(),3);
                              
    }
    public void limpiarCampos(){
            txtDireccion.setText("");
            txtNombre.setText("");
            txtHabitaciones.setText("");
            txtNumeroHotel.setText("");
            
    } 
    
    public void rellenarCampos(Hotel hotel){
            controladorHotel= new ControladorHoteles();
            txtNumeroHotel.setText(""+hotel.getId());
            txtNombre.setText(hotel.getNombre());
            txtDireccion.setText(hotel.getDireccion());
            txtHabitaciones.setText(""+controladorHotel.recuperarNumeroHabitaciones(hotel.getId()));
    }
    public void deshabilitarBotones(){
            btnActualizar.setEnabled(false);
            btnEliminar.setEnabled(false);
            
    } 
    public void organizarFormulario(){
            limpiarCampos();
            deshabilitarBotones();
    }
    public void habilitarBotones(){
            btnActualizar.setEnabled(true);
            btnEliminar.setEnabled(true);
    } 
    public String retornarHotelTemporal(){
            return hotelTemp;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGestionarHabitaciones;
    private javax.swing.JButton btnRecuperar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbHoteles;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtHabitaciones;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNumeroHotel;
    // End of variables declaration//GEN-END:variables
}
