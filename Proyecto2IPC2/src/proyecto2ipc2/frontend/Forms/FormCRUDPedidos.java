/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto2ipc2.frontend.Forms;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import proyecto2ipc2.backend.Hotel.Cliente;
import proyecto2ipc2.backend.Hotel.ControladorClientes;
import proyecto2ipc2.backend.Restaurante.Consumo;
import proyecto2ipc2.backend.Restaurante.ControladorConsumos;
import proyecto2ipc2.backend.Restaurante.ControladorMenus;
import proyecto2ipc2.backend.Restaurante.ControladorRestaurantes;
import proyecto2ipc2.backend.Restaurante.IngresosRestaurante;
import proyecto2ipc2.backend.Restaurante.Menu;
import proyecto2ipc2.backend.Restaurante.Restaurante;
import proyecto2ipc2.backend.User.Logger;
import static proyecto2ipc2.database.OperadorEsquema.CAMPOS_OBLIGATORIOS;
import static proyecto2ipc2.database.OperadorEsquema.ERROR_CREACION;
import proyecto2ipc2.frontend.JFramePrincipal;

/**
 *
 * @author bryan
 */
public class FormCRUDPedidos extends javax.swing.JInternalFrame {
    public static final String AGREGAR_ORDEN = "Esta seguro de agregar esta orden?"; 
    public static final String ACTUALIZAR_ORDEN = "Esta seguro de actualizar esta orden"
            + "                             \n con los nuevos datos seleccionados?"; 
    public static final String ELIMINAR_ORDEN = "Esta seguro de eliminar esta orden?"; 
    public static final String COBRAR_PEDIDOS = "No hay ningun pedido que cobrar"; 
    
    private ControladorMenus controladorMenus;
    private ControladorConsumos controladorConsumos;
    private ControladorClientes controladorClientes;
    private ControladorRestaurantes controladorRestaurantes;
 
    private Menu menu;
    private Cliente cliente;
    private Logger logger = Logger.getInstance();
    private Restaurante restaurante;
    private IngresosRestaurante ingresoRestaurante;
    private LocalDate fecha;
    private double total;
    
    private JFramePrincipal ventana;
    /**
     * Creates new form FormCRUDPedidos
     */
    public FormCRUDPedidos(JFramePrincipal ventana) {
        this.ventana= ventana;
        this.restaurante= new Restaurante(logger.getIdEstablecimiento(), logger.getEstablecimiento());
        this.fecha= LocalDate.parse(ventana.fechaActualDelSistema2(), DateTimeFormatter.ofPattern("dd/MM/yyyy"));
        initComponents();
        this.txtFechaPedido.setText(ventana.fechaActualDelSistema2());
        this.cargarComboRestaurantes();
        this.cargarComboClientes();
        this.deshabilitarBotones();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNombreMenu = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNumeroMenu = new javax.swing.JTextField();
        btnCrear = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        txtPrecio = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        comboRestaurantes = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        txtIdRestaurante = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtNombreCliente = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        comboNits = new javax.swing.JComboBox<>();
        btnAgregarCliente = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtNumeroPedido = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        comboPorciones = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        txtFechaPedido = new javax.swing.JFormattedTextField();
        btnLimpiar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbMenus = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbPedidos = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbPromosMenus = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        btnCobrarPedidos = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Gestion de Pedidos");

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Nombre:*");

        txtNombreMenu.setEditable(false);

        jLabel2.setText("Descripcion:*");

        jLabel4.setText("Precio * Q.");

        jLabel5.setText("Numero: *");

        txtNumeroMenu.setEditable(false);

        btnCrear.setBackground(new java.awt.Color(0, 102, 255));
        btnCrear.setForeground(new java.awt.Color(255, 255, 255));
        btnCrear.setText("Agregar Pedido");
        btnCrear.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCrear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(255, 0, 0));
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("Eliminar Pedido");
        btnEliminar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnActualizar.setBackground(new java.awt.Color(255, 102, 0));
        btnActualizar.setForeground(new java.awt.Color(0, 0, 0));
        btnActualizar.setText("Actualizar Pedido");
        btnActualizar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnActualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        txtDescripcion.setEditable(false);
        txtDescripcion.setColumns(20);
        txtDescripcion.setRows(5);
        jScrollPane2.setViewportView(txtDescripcion);

        txtPrecio.setEditable(false);
        txtPrecio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        jLabel8.setText("Restaurante:");

        comboRestaurantes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboRestaurantesActionPerformed(evt);
            }
        });

        jLabel9.setText("ID:");

        txtIdRestaurante.setEditable(false);

        jLabel3.setText("Datos del Menu:");

        jLabel6.setText("Datos del Cliente:");

        jLabel7.setText("Nombre: *");

        txtNombreCliente.setEditable(false);

        jLabel10.setText("NIT:    *");

        comboNits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboNitsActionPerformed(evt);
            }
        });

        btnAgregarCliente.setBackground(new java.awt.Color(0, 255, 0));
        btnAgregarCliente.setForeground(new java.awt.Color(0, 0, 0));
        btnAgregarCliente.setText("+.Agregar Cliente");
        btnAgregarCliente.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAgregarCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAgregarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarClienteActionPerformed(evt);
            }
        });

        jLabel11.setText("No. Pedido:");

        txtNumeroPedido.setEditable(false);

        jLabel12.setText("No. Porciones:");

        comboPorciones.setEditable(true);
        comboPorciones.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        jLabel13.setText("Fecha Pedido:");

        txtFechaPedido.setEditable(false);
        try {
            txtFechaPedido.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        btnLimpiar.setBackground(new java.awt.Color(255, 255, 0));
        btnLimpiar.setForeground(new java.awt.Color(0, 0, 0));
        btnLimpiar.setText("Limpiar Campos");
        btnLimpiar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnLimpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCrear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtNombreCliente)
                            .addComponent(comboNits, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAgregarCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                            .addComponent(btnLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)
                                .addComponent(jLabel5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNumeroMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNombreMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtPrecio))
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(42, 42, 42)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel8))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIdRestaurante, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(comboRestaurantes, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboPorciones, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNumeroPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtFechaPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 3, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNumeroMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(txtNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(txtNumeroPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNombreMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(comboNits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(comboRestaurantes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(txtIdRestaurante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(comboPorciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(txtFechaPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAgregarCliente)
                        .addGap(28, 28, 28)
                        .addComponent(btnCrear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnActualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLimpiar)))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel14.setText("Menus Disponibles (Seleccione uno)");

        tbMenus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero", "Tipo", "Nombre", "Descripcion", "Precio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbMenus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbMenusMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbMenus);
        if (tbMenus.getColumnModel().getColumnCount() > 0) {
            tbMenus.getColumnModel().getColumn(1).setHeaderValue("Tipo");
            tbMenus.getColumnModel().getColumn(3).setHeaderValue("Descripcion");
        }

        jLabel15.setText("Lista de Pedidos:");

        tbPedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No Porciones", "No. Menu", "Nombre", "Precio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbPedidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbPedidosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbPedidos);

        tbPromosMenus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero", "Nombre", "% Descuento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbPromosMenus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbPromosMenusMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tbPromosMenus);

        jLabel16.setText("Menus con Promocion:");

        btnCobrarPedidos.setBackground(new java.awt.Color(0, 153, 153));
        btnCobrarPedidos.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnCobrarPedidos.setForeground(new java.awt.Color(255, 255, 255));
        btnCobrarPedidos.setText("Cobrar Pedidos");
        btnCobrarPedidos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCobrarPedidos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCobrarPedidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCobrarPedidosActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 51, 51));
        jButton1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Nuevo Pedido");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jScrollPane1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCobrarPedidos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(btnCobrarPedidos)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        // TODO add your handling code here:
            if (txtNombreMenu.getText().isEmpty()||txtDescripcion.getText().isEmpty()||txtNumeroMenu.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, CAMPOS_OBLIGATORIOS, ERROR_CREACION, JOptionPane.ERROR_MESSAGE);
            } else {
                        int opcion= JOptionPane.showConfirmDialog(this, AGREGAR_ORDEN);
                        if (opcion==0) {
                                agregarPedidoEnTabla();
                        }
                        if(opcion==1){
                                limpiarCampos();
                                deshabilitarBotones();
                        }
            }
    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
            int opcion= JOptionPane.showConfirmDialog(this, ELIMINAR_ORDEN);
            if (opcion==0) {
                    eliminarPedidoEnTabla();
                    deshabilitarBotones();
            }
            
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
            int opcion= JOptionPane.showConfirmDialog(this, ACTUALIZAR_ORDEN);
            if (opcion==0) {
                    actualizarMenuEnTabla();
                    deshabilitarBotones();
            }
            
        
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void comboRestaurantesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboRestaurantesActionPerformed
        // TODO add your handling code here:
            controladorMenus= new ControladorMenus();
            
            Logger logger = Logger.getInstance();
            if (logger.getEstablecimiento()!=null) {
                    txtIdRestaurante.setText(""+logger.getIdEstablecimiento());
                    cargarTablaMenus();
                    deshabilitarComboRestaurantes();              
            } else {
                        txtIdRestaurante.setText(""+controladorMenus.recuperarRestaurante((String)comboRestaurantes.getSelectedItem()));
                        cargarTablaMenus();
            }
    }//GEN-LAST:event_comboRestaurantesActionPerformed

    private void tbMenusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbMenusMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model =(DefaultTableModel)tbMenus.getModel();

        if(tbMenus.getSelectedRow()!=-1){//si se ha seleccionado algo en la tabla se rellenan los campo
                txtNumeroMenu.setText(model.getValueAt(tbMenus.getSelectedRow(), 0).toString());
                txtNombreMenu.setText(model.getValueAt(tbMenus.getSelectedRow(), 2).toString());
                txtDescripcion.setText(model.getValueAt(tbMenus.getSelectedRow(), 3).toString());
                txtPrecio.setText(model.getValueAt(tbMenus.getSelectedRow(), 4).toString());
            
        }
    }//GEN-LAST:event_tbMenusMouseClicked

    private void tbPromosMenusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbPromosMenusMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tbPromosMenusMouseClicked

    private void comboNitsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboNitsActionPerformed
        // TODO add your handling code here:
            controladorClientes = new ControladorClientes();
            Cliente cliente=controladorClientes.recuperarClienteNit((String)comboNits.getSelectedItem());
            if (cliente!=null) {
                    txtNombreCliente.setText(cliente.getNombre());
            }
    }//GEN-LAST:event_comboNitsActionPerformed

    private void btnAgregarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarClienteActionPerformed
        // TODO add your handling code here:
            this.formCliente= new FormCliente(ventana);
            this.formCliente.setVisible(true);
            this.cargarComboClientes();
    }//GEN-LAST:event_btnAgregarClienteActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
            limpiarCampos();
            deshabilitarBotones();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void tbPedidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbPedidosMouseClicked
        // TODO add your handling code here:
            habilitarBotones();
    }//GEN-LAST:event_tbPedidosMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
            limpiarTablaPedidos();
            limpiarCampos();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnCobrarPedidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCobrarPedidosActionPerformed
        // TODO add your handling code here:
            if (tbPedidos.getRowCount()<=0) {
                    JOptionPane.showMessageDialog(null, COBRAR_PEDIDOS, ERROR_CREACION, JOptionPane.ERROR_MESSAGE);
            } else {    
                        //lista de consumos
                        List<Consumo> listaPedidos= new ArrayList<>();
                        //objetos utilizados en un consumo
                        cliente = new Cliente((String)comboNits.getSelectedItem(),txtNombreCliente.getText());
                        
                        DefaultTableModel tb = (DefaultTableModel)tbPedidos.getModel();
                        int limite = tbPedidos.getRowCount();
                        //agregacion de los pedidos de la tabla a la lista de consumos
                        for (int i = 0; i < limite; i++) {
                                menu = new Menu(Integer.parseInt(tb.getValueAt(i, 1).toString()), tb.getValueAt(i, 2).toString(),
                                                Double.parseDouble(tb.getValueAt(i, 3).toString()));
                                listaPedidos.add(new Consumo(Integer.parseInt(tb.getValueAt(i, 0).toString()), menu, cliente, fecha, restaurante));
                        }
                        
                        //*IMPORTANTE*se verifica cada menu si tiene promocion antes de agregarlo a la tabla de pedidos en este formulario
                        //calculo del total de consumos y registro de cada consumo
                        controladorConsumos= new ControladorConsumos();
                        controladorConsumos.registrarPedidos(listaPedidos);
                        total= controladorConsumos.calcularTotalConsumos(listaPedidos);
                        
                        //Se registra el total de Ingresos al Restaurante por los Consumos
                        ingresoRestaurante= new IngresosRestaurante(total, fecha, restaurante);
                        controladorRestaurantes= new ControladorRestaurantes(ingresoRestaurante, this);
                        controladorRestaurantes.registrarIngresoRestaurante();
                        
                        //visualizar ventana de pago de pedidos                    
                        this.formCobroPedidos= new FormCobroPedidos(ventana,cliente, restaurante, txtFechaPedido.getText(),total,listaPedidos);
                        this.formCobroPedidos.setVisible(true);
            
            }
            
    }//GEN-LAST:event_btnCobrarPedidosActionPerformed
    public void cargarTablaMenus(){
            limpiarTabla();
            controladorMenus= new ControladorMenus();
            List<Menu> lista= controladorMenus.recuperarMenus(Integer.parseInt(txtIdRestaurante.getText()));
            DefaultTableModel model= (DefaultTableModel)this.tbMenus.getModel();
            for(Menu menu: lista){
                    model.addRow(new Object[]{menu.getNumero(),menu.getTipo(),
                    menu.getNombre(),menu.getDescripcion(),menu.getPrecio(),menu.getCostoFabricacion()});
            }                        
    }
    public void limpiarTabla(){
            DefaultTableModel tb = (DefaultTableModel)tbMenus.getModel();
            int a = tbMenus.getRowCount()-1;
            for (int i = a; i >= 0; i--) {          
                    tb.removeRow(tb.getRowCount()-1);
            }
    }
    public void limpiarTablaPedidos(){
            DefaultTableModel tb = (DefaultTableModel)tbPedidos.getModel();
            int a = tbPedidos.getRowCount()-1;
            for (int i = a; i >= 0; i--) {          
                    tb.removeRow(tb.getRowCount()-1);
            }
    }
    public void cargarComboRestaurantes(){
            controladorMenus= new ControladorMenus();
            List<Restaurante> lista= controladorMenus.recuperarRestaurantes();
            DefaultComboBoxModel modelComboRestaurantes=(DefaultComboBoxModel)comboRestaurantes.getModel();
            for(Restaurante restaurante: lista){
                modelComboRestaurantes.addElement(restaurante.getNombre());
            }   AutoCompleteDecorator.decorate(comboRestaurantes);
    }
    public void cargarComboClientes(){
            controladorClientes= new ControladorClientes();
            List<Cliente> lista= controladorClientes.recuperarClientes();
            DefaultComboBoxModel model4=(DefaultComboBoxModel)comboNits.getModel();
            for(Cliente huesped: lista){
                model4.addElement(huesped.getNit());
            }   AutoCompleteDecorator.decorate(comboNits);
    }
    public void agregarPedidoEnTabla(){
            DefaultTableModel model= (DefaultTableModel)this.tbPedidos.getModel();        
            model.addRow(new Object[]{comboPorciones.getSelectedItem(),txtNumeroMenu.getText(),
                    txtNombreMenu.getText(),txtPrecio.getText()});
                              
    }
    public void eliminarPedidoEnTabla(){
            DefaultTableModel model=(DefaultTableModel)tbPedidos.getModel();
            model.removeRow(tbPedidos.getSelectedRow());
    }
    public void actualizarMenuEnTabla(){
            DefaultTableModel model=(DefaultTableModel)tbPedidos.getModel();
            //Actualizando Tabla Pedidos
            model.setValueAt(comboPorciones.getSelectedItem(), tbPedidos.getSelectedRow(), 0);
            model.setValueAt(txtNumeroMenu.getText(), tbPedidos.getSelectedRow(),1);
            model.setValueAt(txtNombreMenu.getText(), tbPedidos.getSelectedRow(),2);
            model.setValueAt(txtPrecio.getText(), tbPedidos.getSelectedRow(),3);
            
    }
    public void limpiarCampos(){
            txtPrecio.setText("");
            txtNumeroMenu.setText("");
            txtNombreMenu.setText("");
            txtDescripcion.setText("");
            comboPorciones.setSelectedIndex(0);
    } 
    public void organizarFormulario(){
            limpiarCampos();
            deshabilitarBotones();
    }
    public void rellenarCampos(Menu menu){
            txtPrecio.setText(String.valueOf(menu.getPrecio()));
            txtNombreMenu.setText(menu.getNombre());
            txtNumeroMenu.setText(String.valueOf(menu.getNumero()));
            txtDescripcion.setText(menu.getDescripcion());
            comboPorciones.setSelectedItem(menu.getTipo());
    }
    public void seleccionarRestaurante(String restaurante){
            comboRestaurantes.setSelectedItem(restaurante);
    }
    public void deshabilitarBotones(){
            btnEliminar.setEnabled(false);
            btnActualizar.setEnabled(false);
            
    } 
     public void deshabilitarComboRestaurantes(){
            comboRestaurantes.setEnabled(false);
    }
    public void habilitarBotones(){
            btnEliminar.setEnabled(true);
            btnActualizar.setEnabled(true);
    } 
    private FormCliente formCliente;
    private FormCobroPedidos formCobroPedidos;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregarCliente;
    private javax.swing.JButton btnCobrarPedidos;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JComboBox<String> comboNits;
    private javax.swing.JComboBox<String> comboPorciones;
    private javax.swing.JComboBox<String> comboRestaurantes;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable tbMenus;
    private javax.swing.JTable tbPedidos;
    private javax.swing.JTable tbPromosMenus;
    private javax.swing.JTextArea txtDescripcion;
    private javax.swing.JFormattedTextField txtFechaPedido;
    private javax.swing.JTextField txtIdRestaurante;
    private javax.swing.JTextField txtNombreCliente;
    private javax.swing.JTextField txtNombreMenu;
    private javax.swing.JTextField txtNumeroMenu;
    private javax.swing.JTextField txtNumeroPedido;
    private javax.swing.JFormattedTextField txtPrecio;
    // End of variables declaration//GEN-END:variables
}
