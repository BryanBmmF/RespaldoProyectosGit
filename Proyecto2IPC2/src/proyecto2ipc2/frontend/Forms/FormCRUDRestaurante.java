/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto2ipc2.frontend.Forms;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import proyecto2ipc2.backend.Restaurante.ControladorRestaurantes;
import proyecto2ipc2.backend.Restaurante.Restaurante;
import static proyecto2ipc2.database.OperadorEsquema.CAMPOS_OBLIGATORIOS;
import static proyecto2ipc2.database.OperadorEsquema.ERROR_ACTUALIZACION;
import static proyecto2ipc2.database.OperadorEsquema.ERROR_CREACION;
import static proyecto2ipc2.database.OperadorEsquema.ERROR_ELIMINACION;
import static proyecto2ipc2.database.OperadorEsquema.ERROR_RECUP;
import static proyecto2ipc2.database.OperadorEsquema.GUARDAR_DATOS;
import proyecto2ipc2.frontend.JFramePrincipal;

/**
 *
 * @author bryan
 */
public class FormCRUDRestaurante extends javax.swing.JInternalFrame {
    public static final String RECUPERAR_RESTAURANTE ="Para recuperar los datos de un Restaurante\n se debe especificar el mismo";
    public static final String ELIMINAR_RESTAURANTE ="Para Eliminar los datos de un Restaurante\n se debe especificar el mismo";
    public static final String ELIMINAR_DATOS_RESTAURANTE ="Esta seguro de Eliminar al Restaurante ";
    
    private ControladorRestaurantes controladorRestaurantes;
    private Restaurante restaurante;
    private String restauranteTemp;
    private JFramePrincipal ventanaprincipal;
    /**
     * Creates new form FormCRUDRestaurante
     */
    public FormCRUDRestaurante(JFramePrincipal ventanaPrincipal) {
        this.restauranteTemp=null;
        this.ventanaprincipal=ventanaPrincipal;
        initComponents();
        deshabilitarBotones();
        cargarTablaRestaurantes();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtHabitaciones = new javax.swing.JTextField();
        btnRegistrar = new javax.swing.JButton();
        btnRecuperar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnGestionarMenus = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtNumeroRestaurante = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbRestaurantes = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Gestion de Restaurantes");

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Nombre:    * ");

        jLabel2.setText("Direccion: *");

        jLabel3.setText("No. Menus:");

        txtHabitaciones.setEditable(false);

        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        btnRecuperar.setText("Recuperar");
        btnRecuperar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecuperarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnGestionarMenus.setBackground(new java.awt.Color(51, 51, 255));
        btnGestionarMenus.setForeground(new java.awt.Color(255, 255, 255));
        btnGestionarMenus.setText("Gestionar Menus");
        btnGestionarMenus.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnGestionarMenus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGestionarMenus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGestionarMenusActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar Campos");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        jLabel5.setText("No.Restaurante:");

        txtNumeroRestaurante.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnRegistrar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnRecuperar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnActualizar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEliminar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnLimpiar)
                                .addGap(0, 54, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNumeroRestaurante))
                                    .addComponent(txtDireccion))
                                .addGap(317, 317, 317))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtNombre)
                        .addGap(79, 79, 79)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnGestionarMenus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtHabitaciones, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtHabitaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnGestionarMenus)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumeroRestaurante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegistrar)
                    .addComponent(btnRecuperar)
                    .addComponent(btnActualizar)
                    .addComponent(btnEliminar)
                    .addComponent(btnLimpiar))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setText("Listado de Restaurantes (Seleccione uno)");

        tbRestaurantes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero", "Nombre", "Direccion", "No. Menus"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbRestaurantes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbRestaurantesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbRestaurantes);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        // TODO add your handling code here:
            if (txtNombre.getText().isEmpty()||txtDireccion.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, CAMPOS_OBLIGATORIOS,ERROR_CREACION, JOptionPane.ERROR_MESSAGE);
            } else {
                        int opcion= JOptionPane.showConfirmDialog(this, GUARDAR_DATOS);
                        if (opcion==0) {
                                restaurante= new Restaurante(txtNombre.getText(), txtDireccion.getText());
                                controladorRestaurantes= new ControladorRestaurantes(restaurante, this);
                                controladorRestaurantes.registrarRestaurante();
                        }
                        if(opcion==1){
                                limpiarCampos();
                                deshabilitarBotones();
                        }
                }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnRecuperarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecuperarActionPerformed
        // TODO add your handling code here:
            if (txtNombre.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null,RECUPERAR_RESTAURANTE, ERROR_RECUP, JOptionPane.ERROR_MESSAGE);
            } else {    
                        restaurante= new Restaurante(txtNombre.getText(),"");
                        controladorRestaurantes= new ControladorRestaurantes(restaurante, this);
                        controladorRestaurantes.recuperarRestaurante();
                }
    }//GEN-LAST:event_btnRecuperarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
            if (txtNombre.getText().isEmpty()||txtDireccion.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, CAMPOS_OBLIGATORIOS,ERROR_ACTUALIZACION, JOptionPane.ERROR_MESSAGE);
            } else {
                        int opcion= JOptionPane.showConfirmDialog(this, GUARDAR_DATOS);
                        if (opcion==0) {
                                restaurante= new Restaurante(txtNombre.getText(), txtDireccion.getText());
                                controladorRestaurantes= new ControladorRestaurantes(restaurante, this);
                                controladorRestaurantes.actualizarRestaurante();
                        }
                        if(opcion==1){
                                limpiarCampos();
                                deshabilitarBotones();
                        }
                }
            
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
            if (txtNombre.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, ELIMINAR_RESTAURANTE, ERROR_ELIMINACION, JOptionPane.ERROR_MESSAGE);
            } else {    
                        int opcion= JOptionPane.showConfirmDialog(this, ELIMINAR_DATOS_RESTAURANTE+restauranteTemp+"?");
                        if (opcion==0) {
                                restaurante= new Restaurante(restauranteTemp,"");
                                controladorRestaurantes= new ControladorRestaurantes(restaurante,this);
                                controladorRestaurantes.eliminarRestaurante();
                        }
                        if(opcion==1){
                                limpiarCampos();
                                deshabilitarBotones();
                        }
                        

                }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
            limpiarCampos();
            deshabilitarBotones();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void tbRestaurantesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbRestaurantesMouseClicked
        // TODO add your handling code here:
            habilitarBotones();
            DefaultTableModel model =(DefaultTableModel)tbRestaurantes.getModel();
            
            if(tbRestaurantes.getSelectedRow()!=-1){//si se ha seleccionado algo en la tabla se rellenan los campo
                    txtNumeroRestaurante.setText(model.getValueAt(tbRestaurantes.getSelectedRow(), 0).toString());
                    txtNombre.setText(model.getValueAt(tbRestaurantes.getSelectedRow(), 1).toString());
                    txtDireccion.setText(model.getValueAt(tbRestaurantes.getSelectedRow(), 2).toString());
                    txtHabitaciones.setText(model.getValueAt(tbRestaurantes.getSelectedRow(), 3).toString());
                    
                    
                    //almacenamos el usuario temporal seleccionado
                    restauranteTemp=model.getValueAt(tbRestaurantes.getSelectedRow(), 1).toString();
                    
            }
    }//GEN-LAST:event_tbRestaurantesMouseClicked

    private void btnGestionarMenusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGestionarMenusActionPerformed
        // TODO add your handling code here:
            if (txtNombre.getText().isEmpty() || txtNumeroRestaurante.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Seleccione primero un Restaurante\n en la Tabla de Abajo", ERROR_RECUP, JOptionPane.ERROR_MESSAGE);
            } else {    
                        ventanaprincipal.gestionarMenus(txtNombre.getText());
                }
    }//GEN-LAST:event_btnGestionarMenusActionPerformed

        public void cargarTablaRestaurantes(){
            controladorRestaurantes= new ControladorRestaurantes();
            List<Restaurante> lista= controladorRestaurantes.recuperarRestaurantes();
            DefaultTableModel model= (DefaultTableModel)this.tbRestaurantes.getModel();
            for(Restaurante restaurante: lista){
                    model.addRow(new Object[]{restaurante.getId(),restaurante.getNombre(),restaurante.getDireccion(),
                    controladorRestaurantes.recuperarNumeroMenus(restaurante.getId())});
            }                        
    }
    public void agregarHotelEnTabla(Restaurante restaurante){
            controladorRestaurantes= new ControladorRestaurantes();
            DefaultTableModel model= (DefaultTableModel)this.tbRestaurantes.getModel();        
            model.addRow(new Object[]{restaurante.getId(),restaurante.getNombre(),restaurante.getDireccion(),
                    controladorRestaurantes.recuperarNumeroMenus(restaurante.getId())});
                              
    }
    public void eliminarRestauranteEnTabla(){
            DefaultTableModel model=(DefaultTableModel)tbRestaurantes.getModel();
            model.removeRow(tbRestaurantes.getSelectedRow());
    }
    public void actualizarRestauranteEnTabla(){
            DefaultTableModel model=(DefaultTableModel)tbRestaurantes.getModel();
            //Actualizando Tabla Clientes
            model.setValueAt(txtNumeroRestaurante.getText(), tbRestaurantes.getSelectedRow(),0);
            model.setValueAt(txtNombre.getText(), tbRestaurantes.getSelectedRow(),1);
            model.setValueAt(txtDireccion.getText(), tbRestaurantes.getSelectedRow(),2);
            model.setValueAt(txtHabitaciones.getText(), tbRestaurantes.getSelectedRow(),3);
                              
    }
    public void limpiarCampos(){
            txtDireccion.setText("");
            txtNombre.setText("");
            txtHabitaciones.setText("");
            txtNumeroRestaurante.setText("");
            
    } 
    public void rellenarCampos(Restaurante hotel){
            controladorRestaurantes= new ControladorRestaurantes();
            txtNumeroRestaurante.setText(""+hotel.getId());
            txtNombre.setText(hotel.getNombre());
            txtDireccion.setText(hotel.getDireccion());
            txtHabitaciones.setText(""+controladorRestaurantes.recuperarNumeroMenus(hotel.getId()));
    }
    public void deshabilitarBotones(){
            btnActualizar.setEnabled(false);
            btnEliminar.setEnabled(false);
            
    } 
    public void habilitarBotones(){
            btnActualizar.setEnabled(true);
            btnEliminar.setEnabled(true);
    } 
    public String retornarRestauranteTemporal(){
            return restauranteTemp;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGestionarMenus;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnRecuperar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbRestaurantes;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtHabitaciones;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNumeroRestaurante;
    // End of variables declaration//GEN-END:variables
}
