/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package empresarial.gui.frames.recursoshumanos;

import empresarial.backend.modelos.Empleado;
import empresarial.backend.recursoshumanos.ManejadorRH;
import java.awt.Toolkit;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.Observable;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.observablecollections.ObservableCollections;
import org.jdesktop.observablecollections.ObservableList;

/**
 *
 * @author jose
 */
public class ListadoEmpleadosFrame extends javax.swing.JInternalFrame {

	ManejadorRH manejador;
	List<Empleado> listadoEmpleados;
	ObservableList<Empleado> listadoEmpleadosObservable;
	Empleado empleadoSeleccionado;
	String tempCUI;
        String tempNombre;
        String tempFechaNac;
        String tempSalario;
        String tempHorasLaborales;
	NuevoEmpleadoDialog nuevoEmpDialog;

	/**
	 * Creates new form ListadoEmpleadosFrame
	 */
	public ListadoEmpleadosFrame(ManejadorRH manejador) {
		this.listadoEmpleados = new ArrayList<>();
		this.manejador = manejador;
		this.listadoEmpleadosObservable = ObservableCollections.observableList(listadoEmpleados);
		empleadoSeleccionado = new Empleado();
		nuevoEmpDialog = new NuevoEmpleadoDialog(true, manejador);
		initComponents();
		this.actualizarButton.setEnabled(false);
		setIcon();
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING:
	 * Do NOT modify this code. The content of this method is always regenerated by the
	 * Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        listadoButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listadoEmpleadosTable = new javax.swing.JTable();
        agregarButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        CUIEdicionText = new javax.swing.JTextField();
        actualizarButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        txtFecha = new javax.swing.JFormattedTextField();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Empleados");

        listadoButton.setText("Ver Listado");
        listadoButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listadoButtonMouseClicked(evt);
            }
        });

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${listadoEmpleadosObservable}");
        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, listadoEmpleadosTable, "listadoBinding");
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${CUI}"));
        columnBinding.setColumnName("CUI");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nombre}"));
        columnBinding.setColumnName("Nombre");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${fechaNacimiento}"));
        columnBinding.setColumnName("Fecha Nacimiento");
        columnBinding.setColumnClass(java.time.LocalDate.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${horasLaborales}"));
        columnBinding.setColumnName("Horas Laborales");
        columnBinding.setColumnClass(Double.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${salario}"));
        columnBinding.setColumnName("Salario");
        columnBinding.setColumnClass(Double.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${empleadoSeleccionado}"), listadoEmpleadosTable, org.jdesktop.beansbinding.BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(listadoEmpleadosTable);

        agregarButton.setText("Agregar");
        agregarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agregarButtonMouseClicked(evt);
            }
        });

        jLabel2.setText("CUI:");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${empleadoSeleccionado.CUI}"), CUIEdicionText, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        actualizarButton.setText("Actualizar");
        actualizarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre:");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${empleadoSeleccionado.nombre}"), txtNombre, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel3.setText("Fecha Nac:");

        jLabel4.setText("Sueldo:  Q.");

        jLabel5.setText("Hrs Laborales:");

        btnEliminar.setText("Eliminar");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${empleadoSeleccionado.salario}"), jTextField1, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${empleadoSeleccionado.horasLaborales}"), jTextField2, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        try {
            txtFecha.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-##-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, txtFecha, org.jdesktop.beansbinding.ELProperty.create("${empleadoSeleccionado.fechaNacimiento}"), txtFecha, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 667, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField2))
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CUIEdicionText))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(listadoButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(agregarButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(actualizarButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(CUIEdicionText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listadoButton)
                    .addComponent(agregarButton)
                    .addComponent(actualizarButton)
                    .addComponent(btnEliminar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

     private void listadoButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listadoButtonMouseClicked
            //ejecuta el manejador y llama a la lista de empleados y lo envia como parametro a este metodo
            actualizarListadoObservable(manejador.consultarEmpleados());
                

     }//GEN-LAST:event_listadoButtonMouseClicked

     private void agregarButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agregarButtonMouseClicked
		//Empleado nuevo = manejador.agregarEmpleado();
		//this.listadoEmpleadosObservable.add(nuevo);
		//vamos a usar un modal dialog
		nuevoEmpDialog.setLocationRelativeTo(this);
		nuevoEmpDialog.setVisible(true);
		Empleado nuevo = nuevoEmpDialog.getNuevoEmpleado();
		if (nuevo != null) {
			JOptionPane.showMessageDialog(this, "Empleado con CUI: " + nuevo.getCUI() + "creado satisfactoriamente", "Info", JOptionPane.INFORMATION_MESSAGE);
		}
     }//GEN-LAST:event_agregarButtonMouseClicked

     private void actualizarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarButtonActionPerformed
		//solo lanza error si el cui ha sido cambiado y ya existe empleado con en nuevo CUI
		if (manejador.buscarEmpeladoPorCUI(this.empleadoSeleccionado.getCUI()) != null
			   && !tempCUI.equalsIgnoreCase(this.empleadoSeleccionado.getCUI())) {
			JOptionPane.showMessageDialog(this, "Ya existe un empleado con ese CUI", "Error", JOptionPane.ERROR_MESSAGE);
		} else {
                        // se actualiza el empleado enviando el CUI del empleado a quien se le desean cambiar
                        //sus valores incluso su mismo cui y el empleado seleccionado
			manejador.actualizarEmpleado(tempCUI, this.empleadoSeleccionado); 
			//ya no necesitamos actualizar la lista cuando hay un cambio porque el 
			//firePropertyChange adentro del objeto Empleado se encarga de avisar que
			//hubo un cambio
			//actualizarListadoObservable(manejador.consultarEmpleados());
			this.CUIEdicionText.setText("");
                        this.txtNombre.setText("");
                        
			this.actualizarButton.setEnabled(false);
		}
     }//GEN-LAST:event_actualizarButtonActionPerformed
        //recibe una lista empleados
	public void actualizarListadoObservable(List<Empleado> listadoEmpleados) {
		this.listadoEmpleadosObservable.clear();//se limpia la lista
		this.listadoEmpleadosObservable.addAll(listadoEmpleados); //se agreaga a la lista observable la lista recibida
	}

	public ObservableList<Empleado> getListadoEmpleadosObservable() {
		return listadoEmpleadosObservable;
	}

	public void setListadoEmpleadosObservable(ObservableList<Empleado> listadoEmpleadosObservable) {
		this.listadoEmpleadosObservable = listadoEmpleadosObservable;
	}

	public Empleado getEmpleadoSeleccionado() {
		return empleadoSeleccionado;
	}

	public void setEmpleadoSeleccionado(Empleado empleadoSeleccionado) {
		Empleado anterior = this.empleadoSeleccionado;
		if (empleadoSeleccionado != null) { //si el empleado seleccionado n0 es nulo
			this.empleadoSeleccionado = empleadoSeleccionado.clone();//se clona el empleado en empleadoSeleccionado al momento de seleccionarlo 
			tempCUI = this.empleadoSeleccionado.getCUI(); //se guarda el cui seleccionado en una variable temporal
			actualizarButton.setEnabled(true);  //se habilita el boton al momento de ser seleccionado un empleado
		}
		firePropertyChange("empleadoSeleccionado", anterior, this.empleadoSeleccionado);
	}

	private void setIcon() {
		this.setFrameIcon(new ImageIcon(
			   Toolkit.getDefaultToolkit().getImage(getClass().getResource("/empresarial/imagenes/employees.png"))));
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CUIEdicionText;
    private javax.swing.JButton actualizarButton;
    private javax.swing.JButton agregarButton;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton listadoButton;
    private javax.swing.JTable listadoEmpleadosTable;
    private javax.swing.JFormattedTextField txtFecha;
    private javax.swing.JTextField txtNombre;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
